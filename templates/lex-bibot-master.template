{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This template uses the Lex Bot templates with VPC quickstart. The AWS VPC creates a multi-AZ,  multi-subnet VPC infrastructure with managed NAT gateways in the public subnet for each  Availability Zone. The Lex Fulfilment Lambda will be running in VPC private subnets to connect  to redshift cluster. **WARNING** This template creates AWS resources. You will be billed for  the AWS resources used if you create a stack from this template. (qs-1nrlpbhnf)",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Network Configuration"
                    },
                    "Parameters": [
                        "AvailabilityZones",
                        "VPCCIDR",
                        "PublicSubnet1CIDR",
                        "PublicSubnet2CIDR",
                        "PrivateSubnet1CIDR",
                        "PrivateSubnet2CIDR"
                    ]
                },
                {
                    "Label": {
                        "default": "Redshift Configurations"
                    },
                    "Parameters": [
                        "RedshiftUsername",
                        "RedshiftPassword",
                        "RedshiftDbName",
                        "RedshiftPort",
                        "RedshiftNodeType",
                        "RedshiftNumberOfNodes"
                    ]
                },
                {
                    "Label": {
                        "default": "Lex Bot Configuration"
                    },
                    "Parameters": [
                        "LexResourcesPrefix",
                        "ParentOrigin"
                    ]
                },
                {
                    "Label": {
                        "default": "Quick Start Configuration"
                    },
                    "Parameters": [
                        "QSS3BucketName",
                        "QSS3KeyPrefix"
                    ]
                }
            ]
        }
    },
    "Parameters": {
        "QSS3BucketName": {
            "Type": "String",
            "Description": "S3 bucket name for the Quick Start assets. Quick Start bucket name can include numbers, lowercase letters, uppercase letters, periods (.), and hyphens (-). It cannot start or end with a hyphen (-) or period (.).",
            "Default": "ag-bot-demo-ire",
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
            "ConstraintDescription": "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, periods (.), and hyphens (-). It cannot start or end with a hyphen (-) or period (.)"
        },
        "QSS3KeyPrefix": {
            "Type": "String",
            "Description": "The S3 key name prefix used to simulate a folder for your copy of Quick Start assets, if you decide to customize or extend the Quick Start for your own use. This prefix can include numbers, lowercase letters, uppercase letters, hyphens, and forward slashes",
            "Default": "conversational-bot",
            "AllowedPattern": "^[0-9a-zA-Z-/]*$",
            "ConstraintDescription": "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).  Prefix cannot start with a slash but must end with a slash unless it is the empty string."
        },
        "AvailabilityZones": {
            "Type": "List<AWS::EC2::AvailabilityZone::Name>",
            "Description": "Select two Availability Zones that will be used to deploy the CloudFormation stacks. The Quick Start preserves the logical order you specify."
        },
        "VPCCIDR": {
            "Type": "String",
            "Description": "CIDR Block for the VPC",
            "Default": "10.0.0.0/16",
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28"
        },
        "PublicSubnet1CIDR": {
            "Type": "String",
            "Description": "CIDR Block for the public DMZ subnet 1 located in Availability Zone 1",
            "Default": "10.0.128.0/20",
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28"
        },
        "PublicSubnet2CIDR": {
            "Type": "String",
            "Description": "CIDR Block for the public DMZ subnet 2 located in Availability Zone 2",
            "Default": "10.0.144.0/20",
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28"
        },
        "PrivateSubnet1CIDR": {
            "Type": "String",
            "Description": "CIDR Block for the private subnet 1 located in Availability Zone 1",
            "Default": "10.0.0.0/19",
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28"
        },
        "PrivateSubnet2CIDR": {
            "Type": "String",
            "Description": "CIDR Block for the private subnet 2 located in Availability Zone 2",
            "Default": "10.0.32.0/19",
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28"
        },
        "RedshiftUsername": {
            "Type": "String",
            "Description": "RedShift Username"
        },
        "RedshiftPassword": {
            "Type": "String",
            "Description": "RedShift Password",
            "NoEcho": true
        },
        "RedshiftDbName": {
            "Type": "String",
            "Description": "RedShift Database name"
        },
        "RedshiftPort": {
            "Type": "String",
            "Description": "RedShift Port",
            "Default": "5439"
        },
        "RedshiftNodeType": {
            "Type": "String",
            "Description": "The node type to for the redshift cluster",
            "Default": "dc2.large",
            "AllowedValues": [
                "dc2.large",
                "dc2.8xlarge",
                "ds2.large",
                "ds2.8xlarge"
            ],
            "ConstraintDescription": "must be a valid RedShift node type."
        },
        "RedshiftNumberOfNodes": {
            "Type": "Number",
            "Description": "The number of nodes in the redshift cluster",
            "Default": "1"
        },
        "LexResourcesPrefix": {
            "Type": "String",
            "Description": "Prefix for Lex Bot, Intent and Slots",
            "Default": "lex_cft_prefix",
            "AllowedPattern": "(^[a-zA-Z]$|^[a-zA-Z][a-zA-Z_]+$)"
        },
        "ParentOrigin": {
            "Type": "String",
            "Default": "",
            "Description": "Browser origin (e.g. http://lexbot.example.com:8080) of an existing site that is allowed to send/receive data and events from the web ui in an iframe setup. This is an optional parameter. If left empty, an S3 bucket will be created to host a sample parent site embedding the webapp as an iframe.\n",
            "AllowedPattern": "(^$|^https?://[\\w\\.-]+(:\\d+)?$)",
            "ConstraintDescription": "Empty or valid browser origin"
        }
    },
    "Rules": {
        "LexRegionCheck": {
            "Assertions" : [
                { "Assert" : {"Fn::Contains":[["us-east-1", "us-west-2", "eu-west-1"], {"Ref": "AWS::Region"}]},
                  "AssertDescription" : "Lex is currently supported in us-east-1, us-west-2 and eu-west-1 regions only"
                }
            ]
        }
    },
    "Resources": {
        "VPCStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}/submodules/quickstart-aws-vpc/templates/aws-vpc.template"
                },
                "Parameters": {
                    "AvailabilityZones": {
                        "Fn::Join": [
                            ",",
                            {
                                "Ref": "AvailabilityZones"
                            }
                        ]
                    },
                    "NumberOfAZs": "2",
                    "VPCCIDR": {
                        "Ref": "VPCCIDR"
                    },
                    "PublicSubnet1CIDR": {
                        "Ref": "PublicSubnet1CIDR"
                    },
                    "PublicSubnet2CIDR": {
                        "Ref": "PublicSubnet2CIDR"
                    },
                    "PrivateSubnet1ACIDR": {
                        "Ref": "PrivateSubnet1CIDR"
                    },
                    "PrivateSubnet2ACIDR": {
                        "Ref": "PrivateSubnet2CIDR"
                    }
                }
            }
        },
        "LexBotStack": {
            "Type": "AWS::CloudFormation::Stack",
            "DependsOn": "VPCStack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}/templates/lex-bibot.template"
                },
                "Parameters": {
                    "QSS3BucketName": {
                        "Ref": "QSS3BucketName"
                    },
                    "QSS3KeyPrefix": {
                        "Ref": "QSS3KeyPrefix"
                    },
                    "VPCID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.VPCID"
                        ]
                    },
                    "PrivateSubnetId1": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PrivateSubnet1AID"
                        ]
                    },
                    "PrivateSubnetId2": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PrivateSubnet2AID"
                        ]
                    },
                    "RedshiftUsername": {
                        "Ref": "RedshiftUsername"
                    },
                    "RedshiftPassword": {
                        "Ref": "RedshiftPassword"
                    },
                    "RedshiftDbName": {
                        "Ref": "RedshiftDbName"
                    },
                    "RedshiftPort": {
                        "Ref": "RedshiftPort"
                    },
                    "RedshiftNodeType": {
                        "Ref": "RedshiftNodeType"
                    },
                    "RedshiftNumberOfNodes": {
                        "Ref": "RedshiftNumberOfNodes"
                    },
                    "LexResourcesPrefix": {
                        "Ref": "LexResourcesPrefix"
                    },
                    "ParentOrigin": {
                        "Ref": "ParentOrigin"
                    }
                }
            }
        }
    },
    "Outputs": {
        "S3WebsiteURL": {
            "Value": {
                "Fn::GetAtt": [
                    "LexBotStack",
                    "Outputs.S3WebsiteURL"
                ]
            },
            "Description" : "S3 Static Website URL",
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}:S3WebsiteURL"
                }
            }
        },
        "LexBotName": {
            "Value": {
                "Fn::GetAtt": [
                    "LexBotStack",
                    "Outputs.LexBotName"
                ]
            },
            "Description" : "Lex Bot Name",
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}:LexBotName"
                }
            }
        },
        "RedshiftSecurityGroupID": {
            "Value": {
                "Fn::GetAtt": [
                    "LexBotStack",
                    "Outputs.RedshiftSecurityGroupID"
                ]
            },
            "Description" : "Redshift Security Group ID",
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}:RedshiftSecurityGroupID"
                }
            }
        },
        "RedshiftClusterId": {
            "Value": {
                "Fn::GetAtt": [
                    "LexBotStack",
                    "Outputs.RedshiftClusterId"
                ]
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}:RedshiftClusterId"
                }
            }
        },
        "RedshiftEndpoint": {
            "Value": {
                "Fn::GetAtt": [
                    "LexBotStack",
                    "Outputs.RedshiftEndpoint"
                ]
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}:RedshiftEndpoint"
                }
            }
        },
        "RedshiftPort": {
            "Value": {
                "Fn::GetAtt": [
                    "LexBotStack",
                    "Outputs.RedshiftPort"
                ]
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}:RedshiftPort"
                }
            }
        },
        "RedshiftJdbcUrl": {
            "Value": {
                "Fn::GetAtt": [
                    "LexBotStack",
                    "Outputs.RedshiftJdbcUrl"
                ]
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}:RedshiftJdbcUrl"
                }
            }
        }
    }
}
