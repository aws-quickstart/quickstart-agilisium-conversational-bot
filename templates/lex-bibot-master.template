AWSTemplateFormatVersion: '2010-09-09'
Description: >-
  This template uses the Lex Bot templates with VPC quickstart. The AWS VPC creates
  a multi-AZ,  multi-subnet VPC infrastructure with managed NAT gateways in the public
  subnet for each  Availability Zone. The Lex Fulfilment Lambda will be running in
  VPC private subnets to connect  to redshift cluster. **WARNING** This template creates
  AWS resources. You will be billed for  the AWS resources used if you create a stack
  from this template. (qs-1ph9hgdoa)
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: VPC network configuration
        Parameters:
          - AvailabilityZones
          - VPCCIDR
          - PrivateSubnet1CIDR
          - PrivateSubnet2CIDR
          - PublicSubnet1CIDR
          - PublicSubnet2CIDR
      - Label:
          default: Redshift configuration
        Parameters:
          - RedshiftUsername
          - RedshiftPassword
          - RedshiftDbName
          - RedshiftPort
          - RedshiftNodeType
          - RedshiftNumberOfNodes
      - Label:
          default: Lex bot configuration
        Parameters:
          - LexResourcesPrefix
          - ParentOrigin
      - Label:
          default: (Optional) Custom data configuration
        Parameters:
          - LoadCustomData
          - CustomDataBucketName
          - CustomDataKeyPrefix
      - Label:
          default: AWS Quick Start configuration
        Parameters:
          - QSS3BucketName
          - QSS3BucketRegion
          - QSS3KeyPrefix
    ParameterLabels:
      QSS3BucketName:
        default: Quick Start S3 bucket name
      QSS3BucketRegion:
        default: Quick Start S3 bucket region
      QSS3KeyPrefix:
        default: Quick Start S3 key prefix
      AvailabilityZones:
        default: Availability Zones
      VPCCIDR:
        default: VPC CIDR
      PrivateSubnet1CIDR:
        default: Private subnet 1 CIDR range
      PrivateSubnet2CIDR:
        default: Private subnet 2 CIDR range
      PublicSubnet1CIDR:
        default: Public subnet 1 CIDR range
      PublicSubnet2CIDR:
        default: Public Subnet2 CIDR range
      RedshiftUsername:
        default: Redshift user name
      RedshiftPassword:
        default: Redshift password
      RedshiftDbName:
        default: Redshift database name
      RedshiftPort:
        default: Redshift port
      RedshiftNodeType:
        default: Redshift node type
      RedshiftNumberOfNodes:
        default: Redshift number of nodes
      LexResourcesPrefix:
        default: Prefix for Lex resources
      ParentOrigin:
        default: Parent origin
      LoadCustomData:
        default: Load custom data flag
      CustomDataBucketName:
        default: Custom data bucket name
      CustomDataKeyPrefix:
        default: Custom data key prefix
Parameters:
  QSS3BucketName:
    Type: String
    Description: >-
      The S3 bucket you created for your copy of Quick Start assets, if you decide
      to customize or extend the Quick Start for your own use. The bucket name can
      include numbers, lowercase letters, uppercase letters, and hyphens, but should
      not start or end with a hyphen.
    Default: aws-quickstart
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, periods (.), and hyphens (-). It cannot start or
      end with a hyphen (-) or period (.)
  QSS3BucketRegion:
    Default: 'us-east-1'
    Description: 'The AWS Region where the Quick Start S3 bucket (QSS3BucketName) is hosted. When using your own bucket, you must specify this value.'
    Type: String
  QSS3KeyPrefix:
    Type: String
    Description: >-
      The S3 key name prefix used to simulate a folder for your copy of Quick Start
      assets, if you decide to customize or extend the Quick Start for your own use.
      This prefix can include numbers, lowercase letters, uppercase letters, hyphens,
      and forward slashes.
    Default: quickstart-agilisium-conversational-bot/
    AllowedPattern: ^[0-9a-zA-Z-/]*$
    ConstraintDescription: >-
      Quick Start key prefix can include numbers, lowercase letters, uppercase letters,
      hyphens (-), and forward slash (/).  Prefix cannot start with a slash but must
      end with a slash unless it is the empty string.
  AvailabilityZones:
    Type: List<AWS::EC2::AvailabilityZone::Name>
    Description: The list of Availability Zones to use for the subnets in the VPC.
      The Quick Start uses two Availability Zones from your list and preserves the
      logical order you specify.
  VPCCIDR:
    Type: String
    Description: The CIDR block for the VPC.
    Default: 10.0.0.0/16
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
  PrivateSubnet1CIDR:
    Type: String
    Description: The CIDR block for the private subnet 1 located in Availability Zone
      1.
    Default: 10.0.0.0/19
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
  PrivateSubnet2CIDR:
    Type: String
    Description: The CIDR block for the private subnet 2 located in Availability Zone
      2.
    Default: 10.0.32.0/19
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
  PublicSubnet1CIDR:
    Type: String
    Description: The CIDR block for the public subnet 1 located in Availability Zone
      1.
    Default: 10.0.128.0/20
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
  PublicSubnet2CIDR:
    Type: String
    Description: The CIDR block for the public subnet 2 located in Availability Zone
      2.
    Default: 10.0.144.0/20
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
  RedshiftUsername:
    Type: String
    Description: The Redshift user name for connecting to the cluster.
  RedshiftPassword:
    Type: String
    Description: The Redshift password for connecting to the cluster.
    NoEcho: true
  RedshiftDbName:
    Type: String
    Description: The name of the Redshift database.
  RedshiftPort:
    Type: String
    Description: The Redshift port.
    Default: '5439'
  RedshiftNodeType:
    Type: String
    Description: The cluster node type for Redshift.
    Default: dc2.large
    AllowedValues:
      - dc2.large
      - dc2.8xlarge
      - ds2.xlarge
      - ds2.8xlarge
    ConstraintDescription: must be a valid redshift node type.
  RedshiftNumberOfNodes:
    Type: Number
    Description: The number of nodes for the Redshift cluster.
    Default: '1'
  LexResourcesPrefix:
    Type: String
    Description: The prefix that will be added to the Lex bot, intents, and slots.
      This takes care of limiting Lambda permissions to intents with specific prefix.
    Default: lex_cft_prefix
    AllowedPattern: (^[a-zA-Z]$|^[a-zA-Z][a-zA-Z_]+$)
  ParentOrigin:
    Type: String
    Default: Optional
    Description: >-
      The browser origin (for example, http://lexbot.example.com:8080) of an existing
      site that is allowed to send/receive data and events from the web UI in an iframe
      setup. This is an optional parameter. If left empty, an S3 bucket will be created
      to host a sample parent site embedding the webapp as an iframe.
    AllowedPattern: (^Optional$|^https?://[\w\.-]+(:\d+)?$)
    ConstraintDescription: Empty or valid browser origin
  LoadCustomData:
    Type: String
    Description: Choose true if you want to load your own custom data from an S3 location,
      instead of using the default sample data.
    Default: 'false'
    AllowedValues:
      - 'true'
      - 'false'
    ConstraintDescription: Choose true to provide custom S3 location for loading data
  CustomDataBucketName:
    Type: String
    Default: ''
    Description: This only applies if the LoadCustomData parameter is set to true.
      The bucket name for the custom dataset. Enter your bucket name where your custom
      data resides.
    AllowedPattern: (^$|^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$)
    ConstraintDescription: Bucket name can include numbers, lowercase letters, uppercase
      letters, periods (.), and hyphens (-). It cannot start or end with a hyphen
      (-) or period (.)
  CustomDataKeyPrefix:
    Type: String
    Default: ''
    Description: This only applies if the LoadCustomData parameter is set to true.
      Enter your custom data where your custom data resides.
    AllowedPattern: (^$|^[0-9a-zA-Z-/]*$)
    ConstraintDescription: Key prefix can include numbers, lowercase letters, uppercase
      letters, hyphens (-), and forward slash (/).  Prefix cannot start with a slash
      but must end with a slash unless it is the empty string.
Conditions:
  UsingDefaultBucket: !Equals [!Ref QSS3BucketName, 'aws-quickstart']
Rules:
  LexRegionCheck:
    Assertions:
      - Assert: !Contains
          - - us-east-1
            - us-west-2
            - eu-west-1
          - !Ref 'AWS::Region'
        AssertDescription: Lex is currently supported in us-east-1, us-west-2 and
          eu-west-1 regions only
  CustomDataCheck:
    RuleCondition: !Equals
      - !Ref 'LoadCustomData'
      - 'true'
    Assertions:
      - Assert: !Not
          - !Equals
            - !Ref 'CustomDataBucketName'
            - ''
        AssertDescription: Please provide custom data bucket name, prefix is optional
Resources:
  VPCStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        !Sub
          - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}submodules/quickstart-aws-vpc/templates/aws-vpc.template'
          - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        AvailabilityZones: !Join
          - ','
          - !Ref 'AvailabilityZones'
        NumberOfAZs: '2'
        VPCCIDR: !Ref 'VPCCIDR'
        PublicSubnet1CIDR: !Ref 'PublicSubnet1CIDR'
        PublicSubnet2CIDR: !Ref 'PublicSubnet2CIDR'
        PrivateSubnet1ACIDR: !Ref 'PrivateSubnet1CIDR'
        PrivateSubnet2ACIDR: !Ref 'PrivateSubnet2CIDR'
  LexBotStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: VPCStack
    Properties:
      TemplateURL:
        !Sub
          - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/lex-bibot.template'
          - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        QSS3BucketName: !Ref 'QSS3BucketName'
        QSS3BucketRegion: !Ref 'QSS3BucketRegion'
        QSS3KeyPrefix: !Ref 'QSS3KeyPrefix'
        VPCID: !GetAtt 'VPCStack.Outputs.VPCID'
        PrivateSubnetId1: !GetAtt 'VPCStack.Outputs.PrivateSubnet1AID'
        PrivateSubnetId2: !GetAtt 'VPCStack.Outputs.PrivateSubnet2AID'
        RedshiftUsername: !Ref 'RedshiftUsername'
        RedshiftPassword: !Ref 'RedshiftPassword'
        RedshiftDbName: !Ref 'RedshiftDbName'
        RedshiftPort: !Ref 'RedshiftPort'
        RedshiftNodeType: !Ref 'RedshiftNodeType'
        RedshiftNumberOfNodes: !Ref 'RedshiftNumberOfNodes'
        LexResourcesPrefix: !Ref 'LexResourcesPrefix'
        ParentOrigin: !Ref 'ParentOrigin'
        LoadCustomData: !Ref 'LoadCustomData'
        CustomDataBucketName: !Ref 'CustomDataBucketName'
        CustomDataKeyPrefix: !Ref 'CustomDataKeyPrefix'
Outputs:
  S3WebsiteURL:
    Value: !GetAtt 'LexBotStack.Outputs.S3WebsiteURL'
    Description: S3 Static Website URL
    Export:
      Name: !Sub '${AWS::StackName}:S3WebsiteURL'
  LexBotName:
    Value: !GetAtt 'LexBotStack.Outputs.LexBotName'
    Description: Lex Bot Name
    Export:
      Name: !Sub '${AWS::StackName}:LexBotName'
  RedshiftSecurityGroupID:
    Value: !GetAtt 'LexBotStack.Outputs.RedshiftSecurityGroupID'
    Description: Redshift Security Group ID
    Export:
      Name: !Sub '${AWS::StackName}:RedshiftSecurityGroupID'
  RedshiftClusterId:
    Value: !GetAtt 'LexBotStack.Outputs.RedshiftClusterId'
    Export:
      Name: !Sub '${AWS::StackName}:RedshiftClusterId'
  RedshiftEndpoint:
    Value: !GetAtt 'LexBotStack.Outputs.RedshiftEndpoint'
    Export:
      Name: !Sub '${AWS::StackName}:RedshiftEndpoint'
  RedshiftPort:
    Value: !GetAtt 'LexBotStack.Outputs.RedshiftPort'
    Export:
      Name: !Sub '${AWS::StackName}:RedshiftPort'
  RedshiftJdbcUrl:
    Value: !GetAtt 'LexBotStack.Outputs.RedshiftJdbcUrl'
    Export:
      Name: !Sub '${AWS::StackName}:RedshiftJdbcUrl'
